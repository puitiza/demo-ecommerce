plugins {
    id 'org.asciidoctor.jvm.convert' version "4.0.5"
    id 'jacoco'
}

/**
 * ------------------------------- Jacoco Configuration  -----------------------------------
 */
jacoco {
    toolVersion = "0.8.13"
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test // Ensure tests run before report generation
    reports {
        xml.required = true   // ðŸ‘ˆ For Sonar
        html.required = true  // ðŸ‘ˆ For local check
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/OrderServiceApplication*.class',
                    '**/config/**'  // The entire config folder
            ])
        }))
    }
}

/**
 * --------------------- Spring Rest Docs Configuration ---------------------------------
 */
ext {
    snippetsDir = file("build/generated-snippets")
}

asciidoctor {
    dependsOn test
    inputs.dir snippetsDir
    attributes "snippets": snippetsDir // Define {snippets} for index.adoc
    sources {
        include "index.adoc"
    }
    baseDirFollowsSourceFile()
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'BOOT-INF/classes/static/docs' // Pack the doc within the jar
    }
}

description = 'demo-order-service'

dependencies {
    // Apply shared dependency sets
    applyDiscoveryDependencies(dependencies)
    applySecurityDependencies(dependencies)
    applyTracingDependencies(dependencies)
    applyKafkaDependencies(dependencies)
    applyRestDocsDependencies(dependencies)

    // Specific dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

    //Circuit Breaker (very important add aop)
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}