name: Quality Gate

on:
  pull_request:
    branches: [main]

jobs:
  quality-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Start SonarQube with init script
        run: |
          echo "üöÄ Starting SonarQube with initialization..."
          docker-compose up -d sonarqube
          
          echo "‚è≥ Waiting for SonarQube to be ready..."
          timeout 180s bash -c 'until curl -s http://localhost:9000/api/system/status | grep -q "UP"; do sleep 10; done'
          
          echo "‚úÖ SonarQube is ready with project and token initialized"

      - name: Run Analysis
        run: |
          echo "üîç Running SonarQube analysis..."
          # El token ya est√° creado por init.sh en imports/sonarqube/sonar-token.txt
          ./gradlew clean test integrationTest jacocoTestReport sonar

      - name: Check Quality Gate
        run: |
          echo "üìä Checking Quality Gate..."
          sleep 30
          
          # Lee el token del archivo que cre√≥ init.sh
          TOKEN=$(cat imports/sonarqube/sonar-token.txt)
          
          status=$(curl -s -u "$TOKEN:" \
            "http://localhost:9000/api/qualitygates/project_status?projectKey=demo-ecommerce" \
            | jq -r '.projectStatus.status')
          
          echo "Quality Gate Status: $status"
          
          if [ "$status" != "OK" ]; then
            echo "‚ùå Quality Gate FAILED"
            exit 1
          else
            echo "‚úÖ Quality Gate PASSED"
          fi

      - name: Cleanup
        if: always()
        run: |
          docker-compose down