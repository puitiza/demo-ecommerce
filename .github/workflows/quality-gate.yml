name: Quality Gate

on:
  pull_request:
    branches: [main]

jobs:
  quality-check:
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:25.9.0.112764-community
        ports: ["9000:9000"]
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true
          SONARQUBE_ADMIN_PASSWORD: "MySecurePoCPass123!"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Wait for SonarQube
        run: |
          echo "‚è≥ Waiting for SonarQube to be fully ready..."
          # Wait longer and check multiple times
          sleep 90
          echo "‚úÖ SonarQube should be ready now"

      - name: Generate Token
        id: token
        run: |
          echo "üîë Generating SonarQube token..."
          
          # Wait a bit more
          sleep 10
          
          # Try multiple times to generate token
          for attempt in {1..3}; do
            echo "Attempt $attempt to generate token..."
          
            response=$(curl -s -u "admin:MySecurePoCPass123!" \
              -X POST "http://localhost:9000/api/user_tokens/generate" \
              -d "name=ci-$(date +%s)" \
              -H "Content-Type: application/x-www-form-urlencoded")
          
            echo "Response: $response"
          
            if [ -n "$response" ] && echo "$response" | grep -q '"token"'; then
              token=$(echo "$response" | grep -o '"token":"[^"]*' | cut -d'"' -f4)
              echo "‚úÖ Token generated: ${token:0:10}..."
              echo "token=$token" >> $GITHUB_OUTPUT
              break
            else
              echo "‚ùå Attempt $attempt failed, waiting..."
              sleep 10
            fi
          done
          
          if [ -z "$token" ]; then
            echo "‚ùå All token generation attempts failed"
            exit 1
          fi

      - name: Create token file for Gradle
        run: |
          echo "üíæ Creating token file for Gradle..."
          mkdir -p imports/sonarqube
          echo "${{ steps.token.outputs.token }}" > imports/sonarqube/sonar-token.txt
          echo "‚úÖ Token file created"

      - name: Run Analysis
        env:
          SONAR_TOKEN: ${{ steps.token.outputs.token }}
          SONAR_HOST_URL: "http://localhost:9000"
        run: |
          echo "üîç Running SonarQube analysis..."
          ./gradlew clean test integrationTest jacocoTestReport sonar

      - name: Check Quality Gate
        run: |
          echo "üìä Checking Quality Gate..."
          sleep 30
          
          status=$(curl -s -u "${{ steps.token.outputs.token }}:" \
            "http://localhost:9000/api/qualitygates/project_status?projectKey=demo-ecommerce" \
            | jq -r '.projectStatus.status')
          
          echo "Quality Gate Status: $status"
          
          if [ "$status" != "OK" ]; then
            echo "‚ùå Quality Gate FAILED"
            exit 1
          else
            echo "‚úÖ Quality Gate PASSED"
          fi