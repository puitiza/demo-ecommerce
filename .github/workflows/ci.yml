# .github/workflows/ci.yml
name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write  # For committing updates to docker-compose.yml and creating tags
  packages: write  # For pushing to GHCR
  issues: write    # For creating releases

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Extract version from tags
        id: extract-version
        run: |
          chmod +x ./imports/scripts/extract-version.sh
          NEW_VERSION=$(./imports/scripts/extract-version.sh)
          echo "extracted_version=$NEW_VERSION" >> $GITHUB_ENV

      - name: Increment version (patch)
        id: increment-version
        run: |
          chmod +x ./imports/scripts/increment-version.sh
          NEW_VERSION=$(./imports/scripts/increment-version.sh "${{ env.extracted_version }}")
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          SERVICES=("server-gateway" "server-discovery" "server-config" "product-service" "order-service")
          VERSION="${{ env.new_version }}"
          for SERVICE in "${SERVICES[@]}"; do
            echo "Building and pushing $SERVICE:$VERSION and :latest"
            docker build --build-arg MODULE=$SERVICE -t ghcr.io/puitiza/demo-ecommerce-$SERVICE:$VERSION .
            docker push ghcr.io/puitiza/demo-ecommerce-$SERVICE:$VERSION
            docker tag ghcr.io/puitiza/demo-ecommerce-$SERVICE:$VERSION ghcr.io/puitiza/demo-ecommerce-$SERVICE:latest
            docker push ghcr.io/puitiza/demo-ecommerce-$SERVICE:latest
          done

      - name: Update docker-compose.yml
        id: update-compose
        run: |
          chmod +x ./imports/scripts/update-compose.sh
          ./imports/scripts/update-compose.sh "${{ env.new_version }}"

      - name: Commit updated docker-compose.yml
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docker-compose.yml
          git commit -m "ci: update docker-compose.yml to ${{ env.new_version }}" || echo "No changes to commit"
          git push

      - name: Create tag and GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag "${{ env.new_version }}"
          git push origin "${{ env.new_version }}"
          gh release create "${{ env.new_version }}" --notes "Published Docker images for the following services:
          - server-gateway:${{ env.new_version }}
          - server-discovery:${{ env.new_version }}
          - server-config:${{ env.new_version }}
          - product-service:${{ env.new_version }}
          - order-service:${{ env.new_version }}"

      - name: Validate deployment
        run: |
          # Pull and start services
          docker compose pull
          docker compose up -d
          # Wait a bit for services to start
          sleep 60
          # Run verification script
          chmod +x verify.sh
          ./verify.sh || exit 1
