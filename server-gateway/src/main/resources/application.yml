spring:
  application:
    name: gateway-service
  data:
    redis:
      url: ${REDIS_ENDPOINT:redis://localhost:6379}
  cloud:
    gateway:
      server:
        webflux:
          routes:
            - id: order-service
              uri: lb://order-service
              predicates:
                - Path=/order/**
              filters:
                - name: RewritePath
                  args:
                    regexp: ^/order/docs/(?<segment>.*)
                    replacement: /docs/${segment}
                - name: RequestRateLimiter
                  args:
                    key-resolver: "#{@userKeyResolver}"
                    redis-rate-limiter.replenishRate: 10
                    redis-rate-limiter.burstCapacity: 5
                    redis-rate-limiter.requestedTokens: 1
            - id: product-service
              uri: lb://product-service
              predicates:
                - Path=/product/**
              filters:
                - name: RewritePath
                  args:
                    regexp: ^/product/docs/(?<segment>.*)
                    replacement: /docs/${segment}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ENDPOINT:http://localhost:8080/realms}/demo-ecommerce

server:
  port: 8090

eureka:
  client:
    service-url:
      defaultZone: ${DISCOVERY_ENDPOINT:http://localhost:8761/eureka}

management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0   # 100% requests
  otlp:
    tracing:
      endpoint: ${MANAGEMENT_OTLP_TRACING_ENDPOINT:http://localhost:4318/v1/traces}
  endpoints:
    web:
      exposure:
        include: health,info,prometheus # Expose endpoints
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.data.redis: DEBUG