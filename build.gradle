plugins {
    id 'org.springframework.boot' version '3.5.5' apply false
    id 'io.spring.dependency-management' version '1.1.7' apply false
}

allprojects {
    group = 'com.ecommerce'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

ext {
    set('springCloudVersion', '2025.0.0')
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

// Define reusable dependency sets as methods
ext {
    applyTracingDependencies = { dependencyHandler ->
        dependencyHandler.implementation 'org.springframework.boot:spring-boot-starter-actuator'
        dependencyHandler.implementation 'io.micrometer:micrometer-tracing-bridge-otel'
        dependencyHandler.implementation 'io.opentelemetry:opentelemetry-exporter-otlp'
        dependencyHandler.implementation 'io.micrometer:micrometer-registry-prometheus'
    }
    applySecurityDependencies = { dependencyHandler ->
        dependencyHandler.implementation 'org.springframework.boot:spring-boot-starter-security'
        dependencyHandler.implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    }
    applyDiscoveryDependencies = { dependencyHandler ->
        dependencyHandler.implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        dependencyHandler.implementation 'org.springframework.cloud:spring-cloud-starter-config'
    }
    applyKafkaDependencies = { dependencyHandler ->
        dependencyHandler.implementation 'org.springframework.kafka:spring-kafka'
    }
    applyRestDocsDependencies = { dependencyHandler ->
        dependencyHandler.testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        dependencyHandler.testImplementation 'org.springframework.restdocs:spring-restdocs-core'
        dependencyHandler.testImplementation 'org.asciidoctor:asciidoctorj:3.0.0'
    }
}